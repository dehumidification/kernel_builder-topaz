name: Build Kernel

on:
  workflow_dispatch:
    inputs:
      device:
          description: 'device codename (topaz)'
          required: true
      repo:
          description: 'Kernel source link (dont include . git at the end)'
          required: true
      branch:
          description: 'Kernel source branch'
          required: true
#      token:
#          description: 'Telegram bot token'
#          required: true
#      chat_id:
#          description: 'Telegram chat id'
#          required: true


env:
  TZ: Asia/Krasnoyarsk
  DEVICE: ${{ github.event.inputs.device }}
  REPO: ${{ github.event.inputs.repo }}
  BRANCH: ${{ github.event.inputs.branch }}
  GKI: ${{ github.event.inputs.gki }}
  TOKEN: ${{ secrets.TOKEN }}
  CHAT_ID: ${{ secrets.CHAT_ID }}

jobs:
  kernel-build:
    runs-on: ubuntu-22.04


    steps:

    # Cleanup The Actions Workspace Using Custom Composite Run Actions
      # You might want to Checkout your repo first, but not mandatory
      - uses: actions/checkout@v3
      # Cleanup The Actions Workspace Using Custom Composite Run Actions
      - uses: rokibhasansagar/slimhub_actions@main
        # Optional key, "retain": Use only if you want something to keep
        with:
          retain: "gcc-13"

      - name: Init
        run: |
          git config --global user.name "Sont3f"
          git config --global user.email "nikitaobzor505@gmail.com"
          df -h
          ld --version
          gcc -v
          ar --version
          sudo apt update
          sudo apt install -y bc bison build-essential ccache curl flex glibc-source g++-multilib gcc-multilib binutils-aarch64-linux-gnu git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-gtk3-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev python2 tmate ssh neofetch
          neofetch

      - name: Compiling
        run: |
            wget https://raw.githubusercontent.com/dehumidification/kernel_build_action/main/scripts/topaz_build_script.sh
            bash topaz_build_script.sh
